# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/ccnetwork.com/msp
        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')" #all members can read
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"
    - &OrgInfo1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrgInfo1MSP

        # ID to load the MSP definition as
        ID: OrgInfo1MSP

        MSPDir: crypto-config/peerOrganizations/orgInfo1.ccnetwork.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgInfo1MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrgInfo1MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrgInfo1MSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.orgInfo1.ccnetwork.com
              Port: 7051
    - &OrgInfo2
        Name: OrgInfo2MSP
        ID: OrgInfo2MSP
        MSPDir: crypto-config/peerOrganizations/orgInfo2.ccnetwork.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgInfo2MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrgInfo2MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrgInfo2MSP.admin')"
        AnchorPeers:
            - Host: peer0.orgInfo2.ccnetwork.com
              Port: 7051
    - &OrgCC
        Name: OrgCCMSP
        ID: OrgCCMSP
        MSPDir: crypto-config/peerOrganizations/orgCC.ccnetwork.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgCCMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrgCCMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrgCCMSP.admin')"
        AnchorPeers:
            - Host: peer0.orgCC.ccnetwork.com
              Port: 7051
    - &OrgSC1
        Name: OrgSC1MSP
        ID: OrgSC1MSP
        MSPDir: crypto-config/peerOrganizations/orgSC1.ccnetwork.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgSC1MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrgSC1MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrgSC1MSP.admin')"
        AnchorPeers:
            - Host: peer0.orgSC1.ccnetwork.com
              Port: 7051
    - &OrgSC2
        Name: OrgSC2MSP
        ID: OrgSC2MSP
        MSPDir: crypto-config/peerOrganizations/orgSC2.ccnetwork.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrgSC2MSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrgSC2MSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrgSC2MSP.admin')"
        AnchorPeers:
            - Host: peer0.orgSC2.ccnetwork.com
              Port: 7051
################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Capabilities:
    Channel: &ChannelCapabilities
        V1_4_3: true
        V1_3: false
        V1_1: false
    Orderer: &OrdererCapabilities
        V1_4_2: true
        V1_1: false
    Application: &ApplicationCapabilities
        V1_4_2: true
        V1_3: false
        V1_2: false
        V1_1: false

Application: &ApplicationDefaults
    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer0.ccnetwork.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        Brokers:
            - 127.0.0.1:9092
    Organizations:

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities
################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    OrdererGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            InfoConsortium:
                Organizations:
                    - *OrgInfo1
                    - *OrgInfo2
                    - *OrgCC
            CommandConsortium:
                Organizations:
                    - *OrgSC1
                    - *OrgSC2
                    - *OrgCC
            SharedConsortium:
                Organizations:
                    - *OrgInfo1
                    - *OrgInfo2
                    - *OrgCC
                    - *OrgSC1
                    - *OrgSC2
    InfoChannel:
        Consortium: InfoConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *OrgInfo1
                - *OrgInfo2
                - *OrgCC
            Capabilities:
                <<: *ApplicationCapabilities

    CommandChannel:
        Consortium: CommandConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *OrgSC1
                - *OrgSC2
                - *OrgCC
            Capabilities:
                <<: *ApplicationCapabilities

    SharedChannel:
        Consortium: SharedConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *OrgSC1
                - *OrgSC2
                - *OrgCC
                - *OrgInfo1
                - *OrgInfo2
            Capabilities:
                <<: *ApplicationCapabilities